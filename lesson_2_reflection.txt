What happens when you initialize a repository? Why do you need to do it?

	After you "git init" to initialize it as a repository. Git will help you to track 
any files changes that occured in that repository. 				

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is different than working directory and repository in a sense that any commits took it's logical changes, would occur in here. In staging you will define whether any of the changes that happens to the files in the working directory should be track or not. Logical commit is both subjective and objective, when it comes down to one logical change per commit. It's value is unique as it allowed you to track what changes that should be track.   

How can you use the staging area to make sure you have one commit per logical
change?

	By using "git diff --staged", you can see which changes that you will include in your commit. One commit per logical change is both, objective or subjective. Sometimes changes can occured within multiple files, and subjectively it make sense to group all those changes in one commit.  

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
